name: Build and Generate API Docs

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}/services/investment-service/src
    strategy:
      matrix:
        python-version: [3.12]  # Adjust versions as needed

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper git operations

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies Recursively
        run: |
          python -m venv .venv
          source .venv/bin/activate
          # Find and install every requirements.txt in the repo
          find . -name "requirements.txt" -exec pip install -r {} \;
          pip install PyYAML

      - name: Generate OpenAPI Specifications
        run: |
          python scripts/generate_openapi.py

      - name: Run Tests with Coverage
        run: |
          chmod +x ./run_tests.sh
          ./run_tests.sh

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: sri-akshat/wealth-manager

      - name: Upload OpenAPI specs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: openapi-specs
          path: |
            docs/openapi.yaml
            services/*/docs/openapi.yaml
          if-no-files-found: error

      # Only commit OpenAPI specs on main branch
      - name: Commit OpenAPI specs
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/openapi.yaml services/*/docs/openapi.yaml
          # Check if there are any changes to commit
          if ! git diff --staged --quiet; then
            git commit -m "Update OpenAPI specifications [skip ci]"
            git push
          fi