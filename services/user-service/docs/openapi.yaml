openapi: 3.0.0
info:
  title: User Service
  version: 1.0.0
  description: User management service for wealth manager platform. Handles user registration,
    authentication, and profile management.
paths:
  /:
    get:
      tags:
      - system
      summary: Root endpoint that provides basic service information.
      description: "Root endpoint that provides basic service information.\n    \n\
        \    Returns service name, version, and status."
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: {}
  /health:
    get:
      tags:
      - system
      summary: Check if the service is healthy.
      description: Check if the service is healthy.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: {}
  /register:
    post:
      tags:
      - users
      summary: Register a new user.
      description: "Register a new user.\n    \n    Creates a new user account with\
        \ the provided details and optionally returns\n    an access token for immediate\
        \ authentication."
      responses:
        '400':
          description: Email already registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /token:
    post:
      tags:
      - auth
      summary: Authenticate a user and return an access token.
      description: "Authenticate a user and return an access token.\n    \n    Validates\
        \ the user's credentials and returns a JWT token along with the user's profile."
      responses:
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/me:
    get:
      tags:
      - users
      summary: Get the current authenticated user's profile.
      description: "Get the current authenticated user's profile.\n    \n    Returns\
        \ the complete profile information of the currently logged-in user."
      responses:
        '401':
          description: Invalid authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users:
    get:
      tags:
      - users
      summary: Get a list of all users (admin only).
      description: "Get a list of all users (admin only).\n    \n    Returns a paginated\
        \ list of user profiles. Only accessible by administrators."
      responses:
        '401':
          description: Invalid authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
tags:
- name: users
  description: Operations with users and profiles
- name: auth
  description: Authentication operations
- name: system
  description: System maintenance operations
components:
  schemas:
    UserBase:
      type: object
      properties:
        email:
          type: string
          format: email
          description: User's email address
        full_name:
          type: string
          description: User's full name
        role:
          type: string
          description: User's role in the system
      description: Base user schema with common fields.
    UserCreate:
      type: object
      properties:
        password:
          type: string
          description: User's password
          minLength: 8
      description: Schema for user registration request.
    User:
      type: object
      properties:
        id:
          type: integer
          description: User's unique identifier
        is_active:
          type: boolean
          description: Whether the user account is active
        created_at:
          type: string
          format: date-time
          description: When the user account was created
      description: Schema for user response.
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: User's email address
        password:
          type: string
          description: User's password
      description: Schema for login request.
    LoginResponse:
      type: object
      properties:
        access_token:
          type: string
          description: JWT access token
        token_type:
          type: string
          description: Token type
        user:
          type: string
          description: User details
      description: Schema for successful login response.
    RegisterResponse:
      type: object
      properties:
        access_token:
          type: string
          nullable: true
          description: JWT access token if auto-login is enabled
        user:
          type: string
          description: Created user details
      description: Schema for successful registration response.
    UserList:
      type: object
      properties:
        users:
          type: string
          description: List of users
        total:
          type: integer
          description: Total number of users
        skip:
          type: integer
          description: Number of users skipped
        limit:
          type: integer
          description: Maximum number of users returned
      description: Schema for list of users response.
    ErrorResponse:
      type: object
      properties:
        detail:
          type: string
          description: Error message
        status_code:
          type: integer
          description: HTTP status code
        error_type:
          type: string
          description: Type of error
      description: Schema for error responses.
    Token:
      type: object
      properties:
        access_token:
          type: string
          description: JWT access token
        token_type:
          type: string
          description: Token type
      description: Schema for JWT token response.
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
